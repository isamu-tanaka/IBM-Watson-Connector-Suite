// This file was generated by Mendix Modeler.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.
// Special characters, e.g., é, ö, à, etc. are supported in comments.

package watsonservices.actions;

import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.net.URL;
import java.net.URLConnection;
import java.util.HashMap;
import java.util.Map;
import com.ibm.watson.developer_cloud.alchemy.v1.AlchemyLanguage;
import com.ibm.watson.developer_cloud.alchemy.v1.model.Keyword;
import com.ibm.watson.developer_cloud.alchemy.v1.model.Keywords;
import com.mendix.core.Core;
import com.mendix.logging.ILogNode;
import com.mendix.systemwideinterfaces.MendixException;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.systemwideinterfaces.core.IMendixObject;
import com.mendix.webui.CustomJavaAction;
import watsonservices.proxies.KeywordExtraction;

public class GetKeywords extends CustomJavaAction<IMendixObject>
{
	private String apikey;
	private IMendixObject __request;
	private watsonservices.proxies.KeywordRequest request;

	public GetKeywords(IContext context, String apikey, IMendixObject request)
	{
		super(context);
		this.apikey = apikey;
		this.__request = request;
	}

	@Override
	public IMendixObject executeAction() throws Exception
	{
		this.request = __request == null ? null : watsonservices.proxies.KeywordRequest.initialize(getContext(), __request);

		// BEGIN USER CODE
		LOGGER.debug("executing Keywords Connector...");
		
        final StringBuilder htmlContent = new StringBuilder();
        try {
            final URL url = new URL(request.getUrl());
            final URLConnection connection = url.openConnection();
            connection.setRequestProperty("User-Agent", "Mozilla/5.0 (Windows NT 5.1; rv:19.0) Gecko/20100101 Firefox/19.0");
            connection.connect();

            try(final BufferedReader br = new BufferedReader(new InputStreamReader(connection.getInputStream()))) {
            	
            	String line;
                while ((line = br.readLine()) != null) {
                    htmlContent.append(line);
                }
			} catch (Exception e) {
				LOGGER.error("Error parsing the content of the url parameter " + request.getUrl());
				throw new MendixException(e);
			}            
        } catch(Exception e){
        	LOGGER.error("There was a problem with the with the url parameter " + request.getUrl());
			throw new MendixException(e);
        }


        final AlchemyLanguage service = new AlchemyLanguage();
        service.setApiKey(apikey);

        final Map<String, Object> params = new HashMap<String, Object>();
        params.put(AlchemyLanguage.HTML, htmlContent.toString());
        Keywords keywords;
		try {
			keywords = service.getKeywords(params).execute();
		} catch (Exception e) {
			LOGGER.error("Watson Service connection - Failed getting keyword from url: " + request.getUrl(), e);
			throw new MendixException(e);
		}
        
		final IMendixObject keywordExtractionObject = Core.instantiate(getContext(), KeywordExtraction.entityName);
        keywordExtractionObject.setValue(getContext(), KeywordExtraction.MemberNames.Usage.toString(), keywords.getText());
        keywordExtractionObject.setValue(getContext(), KeywordExtraction.MemberNames.Url.toString(), keywords.getUrl());
        keywordExtractionObject.setValue(getContext(), KeywordExtraction.MemberNames.Language.toString(), keywords.getLanguage());
                
        Core.commit(getContext(), keywordExtractionObject);

        for (Keyword keyword : keywords.getKeywords()) {
        	
        	final IMendixObject keywordObject = Core.instantiate(getContext(), watsonservices.proxies.Keyword.entityName);
        	keywordObject.setValue(getContext(), watsonservices.proxies.Keyword.MemberNames.Text.toString(), keyword.getText());
        	keywordObject.setValue(getContext(), watsonservices.proxies.Keyword.MemberNames.Relevance.toString(), keyword.getRelevance().toString());
        	keywordObject.setValue(getContext(), watsonservices.proxies.Keyword.MemberNames.Keyword_KeywordExtraction.toString(), keywordExtractionObject.getId());
        	
        	Core.commit(getContext(), keywordObject);   
        }

        return keywordExtractionObject;
		// END USER CODE
	}

	/**
	 * Returns a string representation of this action
	 */
	@Override
	public String toString()
	{
		return "GetKeywords";
	}

	// BEGIN EXTRA CODE
	private static final String WATSON_ALCHEMY_LOGNODE = "WatsonServices.IBM_WatsonConnector_Alchemy";
	private static ILogNode LOGGER = Core.getLogger(Core.getConfiguration().getConstantValue(WATSON_ALCHEMY_LOGNODE).toString());
	// END EXTRA CODE
}
